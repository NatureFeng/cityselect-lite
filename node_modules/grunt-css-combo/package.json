{
  "name": "grunt-css-combo",
  "description": "Grunt plugin for css combo",
  "version": "0.2.2",
  "homepage": "https://github.com/daxingplay/grunt-css-combo",
  "author": {
    "name": "daxingplay",
    "email": "daxingplay@gmail.com",
    "url": "http://techcheng.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/daxingplay/grunt-css-combo.git"
  },
  "bugs": {
    "url": "https://github.com/daxingplay/grunt-css-combo/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/daxingplay/grunt-css-combo/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "css-combo": ""
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-css-combo\r\n\r\n[![Build Status](https://travis-ci.org/daxingplay/grunt-css-combo.png?branch=master)](https://travis-ci.org/daxingplay/grunt-css-combo)\r\n[![NPM version](https://badge.fury.io/js/grunt-css-combo.png)](http://badge.fury.io/js/grunt-css-combo)\r\n\r\n> Grunt plugin for css combo\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-css-combo --save-dev\r\n```\r\n\r\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-css-combo');\r\n```\r\n\r\n## The \"css_combo\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `css_combo` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  css_combo: {\r\n    options: {\r\n      debug: false,\r\n      compress: false\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.debug\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nWhether to turn on the debug logs or not.\r\n\r\n#### options.punctuation\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nWhether to compress css file or not. I recommend you to minify your css files using cssmin yourself.\r\n\r\n### Usage Examples\r\n\r\n```js\r\ngrunt.initConfig({\r\n  css_combo: {\r\n    options: {},\r\n    files: {\r\n      'dest/index.combo.css': ['src/index.css'],\r\n    },\r\n  },\r\n})\r\n```\r\n\r\nYou can refer test/css_combo_test.js for example.\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-css-combo@0.2.2",
  "dist": {
    "shasum": "f26dfc88794b470096f6ec92767a2f68a167dc87",
    "tarball": "http://registry.npmjs.org/grunt-css-combo/-/grunt-css-combo-0.2.2.tgz"
  },
  "_from": "grunt-css-combo@~0.2.1",
  "_npmVersion": "1.2.23",
  "_npmUser": {
    "name": "daxingplay",
    "email": "daxingplay@gmail.com"
  },
  "maintainers": [
    {
      "name": "daxingplay",
      "email": "daxingplay@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "f26dfc88794b470096f6ec92767a2f68a167dc87",
  "_resolved": "https://registry.npmjs.org/grunt-css-combo/-/grunt-css-combo-0.2.2.tgz"
}
